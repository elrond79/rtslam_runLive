#!/bin/bash

if [[ -z "$OS_ARCH" ]]
then
    OS_ARCH=$(uname)_$(uname -m)
fi

if [[ -z "$RTSLAM_BUILD_TYPE" ]]
then
    curDir=$(basename $(pwd))
    curDirLower=$(echo "$curDir" | tr "[:upper:]" "[:lower:]")

    if [[ "$curDirLower" == "release" ]]
    then
        RTSLAM_BUILD_TYPE=release
    elif [[ "$curDirLower" == "releasedbg" ]]
    then
        RTSLAM_BUILD_TYPE=releaseDbg
    else
        RTSLAM_BUILD_TYPE=debug
    fi
fi

if [[ "$RTSLAM_BUILD_TYPE" == "release" ]]
then
    buildName="Release"
elif [[ "$RTSLAM_BUILD_TYPE" == "releaseDbg" ]]
then
    buildName="RelWithDebInfo"
else
    buildName="Debug"
fi

if [[ "$(uname -s)" == "Linux" ]]
then
    if [[ -d "/mnt/ssd/AR/rt-slam" ]]
    then
        export RTSLAMBASE=/mnt/ssd/AR/rt-slam
    elif [[ -d "/Volumes/sv-dev01/devRepo/paulm/rt-slam" ]]
    then
        export RTSLAMBASE=/Volumes/sv-dev01/devRepo/paulm/rt-slam
    else
        export RTSLAMBASE=/DevProj/AR/rt-slam
    fi
else
    export RTSLAMBASE=/Developer/Projects/rtslam
fi

export JAFAR_BASE=$RTSLAMBASE/jafar
export JAFAR_DIR=$JAFAR_BASE/src
BUILD_DIR=${JAFAR_BASE}/build/$OS_ARCH/$RTSLAM_BUILD_TYPE

cmakeArgs=( $JAFAR_DIR -DENABLE_TCL=OFF -DENABLE_RUBY=OFF -DPATH_TO_BOOST_SANDBOX=$RTSLAMBASE/boost-sandbox -DROBOTPKG_BASE=$RTSLAMBASE/openrobot -DCMAKE_CXX_FLAGS=-pthread -DCMAKE_BUILD_TYPE=$buildName )
doClean=1
if [[ "$1" == "--eclipse" ]];then
    shift
    cmakeArgs=("${cmakeArgs[@]}" -G"Eclipse CDT4 - Unix Makefiles")
    doClean=0
elif [[ "$1" == "--luma_farm" ]];then
    shift
    cmakeArgs=("${cmakeArgs[@]}" -DENABLE_VIAM=OFF -DENABLE_OPENSCENEGRAPH=OFF)
elif [[ "$1" == "--luma_capture" ]];then
    shift
    cmakeArgs=("${cmakeArgs[@]}" -DENABLE_OPENSCENEGRAPH=OFF)
fi

if (( $doClean ))
then
    echo "cleaning cmake files from: ${BUILD_DIR}"
    rm -rf ${BUILD_DIR}/modules
    rm -rf ${BUILD_DIR}/include
    rm -rf ${BUILD_DIR}/lib
    rm -rf ${BUILD_DIR}/CMake*
    rm -rf ${BUILD_DIR}/cmake_install.cmake
    rm -rf ${BUILD_DIR}/CTestTestfile.cmake
    rm -rf ${BUILD_DIR}/Makefile
    echo "... done"
    echo
fi

cmakeArgs=("${cmakeArgs[@]}" "$@")

echo cmake "${cmakeArgs[@]}"
cmake "${cmakeArgs[@]}"