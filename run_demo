#!/bin/bash

SCRIPT_FILE=$(python -c "import os; print os.path.normcase(os.path.normpath(os.path.realpath(os.path.abspath('''$0'''))))")
SCRIPT_DIR=$(dirname "$SCRIPT_FILE")

DISP=""
DISP="--disp-2d"
#DISP="--disp-2d --disp-3d"
#DISP="--disp-2d --disp-osg"
#DISP="--disp-3d"
#DISP="--disp-osg"
#DISP="--disp-2d --disp-3d --disp-osg"

# malloc error after frame 265, 282
#RSEED=1333191916

# malloc error after frame 1486
#RSEED=1333211841

# out of range index error at frame 195
RSEED=1334429335
#RSEED=0

FREQ=100

# Random
#RSEED=0

REPLAY=0
REPLAY_DUMP=0
PAUSE=1
DUMP=1
LOG=1
RENDERALL=0
ROBOT=1
VIEWS=1
SHUTTER=0.004
TRIGGER=0

MODEL=
#MODEL="@/cow.osg"
#MODEL="/DevProj/AR/rt-slam/jafar/src/modules/rtslam/data/models/MTi.osg"

if [[ "$(uname -s)" == "Linux" ]]
then
    ARCH_DIR=x86_64-linux-gnu
    if [[ -d "/Volumes/sv-dev01/devRepo/paulm" ]]
    then
        export RTSLAMBASE=/Volumes/sv-dev01/devRepo/paulm/rt-slam
    else
        export RTSLAMBASE=/DevProj/AR/rt-slam
    fi
else
    export RTSLAMBASE=/Developer/Projects/rtslam
    ARCH_DIR=i386-darwin-gnu
fi

export JAFAR_BASE=$RTSLAMBASE/jafar
export JAFAR_DIR=$JAFAR_BASE/src
currentDir=$(basename $(pwd))
if [[ "$currentDir" == "debug" || "$currentDir" == "release" ]];
then
    export JAFAR_BUILD=$JAFAR_BASE/build/$currentDir
else
    export JAFAR_BUILD=$JAFAR_BASE/build/release
fi

export OSG_WINDOW="0 0 640 480"

if (( $REPLAY_DUMP ))
then
    REPLAY=1
fi

if (( $REPLAY ))
then
    if [[ "${DISP}" == "" ]]
    then
        PAUSE=0
    fi
    DATAPATH=$JAFAR_BASE/captures/testSeq
    if (( ! $REPLAY_DUMP ))
    then
        ROBOT=0
    fi
else
    PAUSE=0

    if [[ -d "/mnt/ssd/AR/rt-slam.data/captures" ]]
    then
        CAPTURE_BASE=/mnt/ssd/AR/rt-slam.data/captures
    elif [[ -d "/mnt/ramdrive/rtslam.data/captures" ]]
    then
        CAPTURE_BASE=/mnt/ramdrive/rtslam.data/captures
    else
        CAPTURE_BASE=$JAFAR_BASE/captures
    fi

    if (( $DUMP || $REPLAY_DUMP ))
    then
        DATAPATH=$CAPTURE_BASE/runDump
    else
        DATAPATH=$CAPTURE_BASE
    fi
fi

if (( $DUMP && ! $REPLAY_DUMP ))
then
    SETUP_CFG=@/../setup.cfg
    EST_CFG=@/../estimation.cfg
else
    SETUP_CFG=@/setup.cfg
    EST_CFG=@/estimation.cfg
fi

# for luma branch
cmd="$JAFAR_BUILD/modules/rtslam/demo_suite/$ARCH_DIR/demo_slam --replay=$REPLAY $DISP --robot=$ROBOT --pause=$PAUSE --dump=$DUMP --log=$LOG --render-all=$RENDERALL --data-path=$DATAPATH --config-setup=${SETUP_CFG} --config-estimation=${EST_CFG} --rand-seed=$RSEED --freq=$FREQ --num-views=$VIEWS --model=$MODEL --trigger=$TRIGGER"
# for patch branch
#cmd="$JAFAR_BUILD/modules/rtslam/demo_suite/$ARCH_DIR/demo_slam --replay=$REPLAY $DISP --robot=$ROBOT --pause=$PAUSE --dump=$DUMP --log=$LOG --render-all=$RENDERALL --data-path=$DATAPATH --config-setup=${SETUP_CFG} --config-estimation=${EST_CFG} --rand-seed=$RSEED --freq=$FREQ"

if [[ -n "$SHUTTER" ]]; then
    cmd="${cmd} --shutter=$SHUTTER"
fi

echo "$cmd"
eval "$cmd"

if (( $DUMP && ! $REPLAY ))
then
    cp "${DATA_PATH}/setup.cfg" "${DATA_PATH}/setup.capture.cfg"
    cp "${DATA_PATH}/estimation.cfg" "${DATA_PATH}/estimation.capture.cfg"
    cp "${SCRIPT_DIR}/run_data" "${DATA_PATH}"
    cp "${SCRIPT_DIR}/makeZip" "${DATA_PATH}"
fi
